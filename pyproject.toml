[project]
name = "decent-bench"
version = "0.0.0"
requires-python = ">=3.13"
dependencies = [
  "networkx",
  "numpy",
  "rich",
  "scipy",
  "scikit-learn",
  "tabulate",
]

[project.optional-dependencies]
dev = [
  "microsoft-python-type-stubs @ git+https://github.com/microsoft/python-type-stubs.git",
  "mypy",
  "pytest",
  "ruff",
  "scipy-stubs",
  "sphinx",
  "sphinx_rtd_theme",
  "types-networkx",
  "types-tabulate",
]

[tool.tox]
envlist = ["dev", "mypy", "pytest", "ruff", "sphinx"]

[tool.tox.env.dev]
description = "Generate dev venv with all dependencies, active with `source .tox/dev/bin/activate`"
deps = [".[dev]"]

[tool.tox.env.sphinx]
description = "Clean up and regenerate rst and html files using sphinx"
deps = ["sphinx", "sphinx_rtd_theme"]
allowlist_externals = ["find", "make"]
commands = [
  ["find", "docs/source", "-name", "*.rst", "!", "-name", "index.rst", "-delete"],
  ["sphinx-apidoc", "-o", "docs/source", "decent_bench", "--no-toc"],
  ["make", "-C", "docs", "clean"],
  ["make", "-C", "docs", "html", "SPHINXOPTS=-W"],
]

[tool.tox.env.mypy]
description = "Run mypy (static type checker)"
deps = [".[dev]"]
commands = [["mypy", "decent_bench"]]

[tool.tox.env.pytest]
description = "Run pytest (test executor)"
deps = ["pytest"]
commands = [["pytest"]]

[tool.tox.env.ruff]
description = "Run ruff (format and style checker)"
deps = ["ruff"]
commands = [
  ["ruff", "check", "decent_bench"],
  ["ruff", "format", "decent_bench", "--check"]
]

[tool.pytest.ini_options]
addopts = "-q -W error"
testpaths = ["test"]

[tool.mypy]
strict = true

[tool.ruff]
lint.flake8-annotations.mypy-init-return = true
lint.select = ["ALL"]
lint.ignore = [
  "C901",     # complex-structure, complains when there are many branches
  "COM812",   # missing-trailing-comma, may cause conflicts when used with the formatter
  "CPY001",   # missing-copyright-notice
  "D100",     # undocumented-public-module
  "D104",     # undocumented-public-package
  "D107",     # undocumented-public-init
  "D203",     # incorrect-blank-line-before-class, incompatible with no-blank-line-before-class (D211)
  "D212",     # multi-line-summary-first-line, incompatible with multi-line-summary-second-line (D213)
  "D415",     # missing-terminal-punctuation, D400 already enforces first line to end with period
  "DOC201",   # docstring-missing-returns, always documenting the return value is too verbose
  "EM101",    # raw-string-in-exception, complains about putting raw string as error msg
  "EM102",    # f-string-in-exception, complains about putting f string as error msg
  "FURB140",  # reimplemented-starmap, wants to replace comprehensions with the less efficient itertools.starmap
  "PLR0913",  # too-many-arguments, complains when there are more than 5 arguments
  "PLR2004",  # magic-value-comparison, complains about dimension checks in cost functions
  "PLR6301",  # no-self-use, complains when self is unused even when implementing an abstract method
  "S311",     # suspicious-non-cryptographic-random-usage, complains about `random.random()`
  "TC001",    # typing-only-first-party-import, reduced rt overhead but slower development and messy imports
  "TC002",    # typing-only-third-party-import, reduced rt overhead but slower development and messy imports
  "TC003",    # typing-only-standard-library-import, reduced rt overhead but slower development and messy imports
  "TRY003",   # raise-vanilla-args, complains about simple error messages like `ValueError('Matrix A must be 2D')`
]
preview = true
line-length = 120
